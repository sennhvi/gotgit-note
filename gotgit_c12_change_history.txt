0
晦气
NOTE
	# 修补式提交
	$ git commit --amend -m "remove sth."

1
多步悔棋
NOTE
	# 实验 1
	# 查看版本库最近的三个提交
	$ git log --stat --pretty=oneline -3
	# 要将最近的两个提交压缩为一个,并更改提交说明
	# 重置,回到两次提交之前
	$ git reset --soft HEAD^^
	# 查看状态和日志后执行提交操作
	$ git status
	$ git log -1
	$ git commit -m "modify text"
	$ git log --stat --pretty=oneline -2

2
拣选指令
NOTE
	# 实现在新的分支上"重放",需要提供一个提交ID作为参数
	# 实验 2
	# 对最近6个提交进行标识
	$ git tag F
	$ git tag E HEAD^
	$ git tag D HEAD^^
	$ git tag C HEAD^^^
	$ git tag B HEAD~4
	$ git tag A HEAD~5
	$ git log --oneline --decorate -6
	
	# 为了消灭D,需要暂时将HEAD头指针切换到Ｃ
	$ git checkout C
	# 执行拣选操作将E提交在当前HEAD上重放(注意到E==master^)
	$ git cherry-pick master^
	# 执行拣选操作将F提交在HEAD上重放
	$ git cherry-pick master
	# 查看日志确认D被消灭,且新提交的哈希值改变
	$ git log --oneline --decorate -6
	# 将master分支重置到新的提交上
	$ git checkout master
	$ git reset --hard HEAD@{1}

	# 重置场景
	$　git checkout master
	$ git reset --hard F
	$ git log --oneline --decorate -6

	# 融合D
	$ git checkout D
	# 悔棋两次以便融合C与D
	$ git reset --soft HEAD^^
	# 执行提交,提交说明重用C提交的说明
	$ git commit -C C
	# 执行拣选操作将E提交在当前HEAD上重放
	$ git cherry-pick E
	# 执行拣选操作将F提交在当前HEAD上重放
	$ git cherry-pick F
	# 查看日志
	# 将master分支指向新的提交ID上
	$ git checkout master
	$ git reset --hard HEAD@{1}

3
rebase
NOTE
	
