0
里程碑
NOTE
	# 里程碑(打tag)通过记录提交ID(创建Tag对象)来为当前版本库的状态进行留影
	$ git tag -m "Say byebye" old_practice
	$ ls .git/refs/tags/old_practice
	$ git rev-parse refs/tags/old_practice
	# 留影之后可以执行git describe命令将最新提交显示为一个易记的名称

1
删除文件
NOTE
	# 本地删除不是真的删除,直接在工作区删除,对其他没任何影响.
	$ rm *.txt
	$ git ls-files
	# 执行git rm 命令删除文件
	$ git rm detached-commit.txt hack-1.txt
	$ git status
	# 删除动作加入了暂存区,如果执行提交动作,就真正删除了文件
	$ git commit -m "delete trash files"
	# 查看历史版本的文件列表
	$ git ls-files --with-tree=HEAD^
	# 查看在历史版本中尚在的删除文件的内容
	$ git cat-file -p HEAD^:welcome.txt
	# 由于删除的时候需要写下大量文件,使用git add -u 快速标记删除
	# 将本地有改动(包括修改和删除)的文件标记到暂存区
	# 实验 1
	# 丢弃之前测试删除的实验性提交
	$ git reset --hard HEAD^
	# 恢复保存的进度(-q使得命令进入安静模式)
	$ git stash apply -q
	# 删除本地文件
	$ rm *.txt
	$ git status -s
	# 执行命令将(被版本库追踪的)本地文件的变更(修改,删除)全部记录到暂存区中
	$ git add -u
	$ git commit -m "delete"

2
恢复删除的文件
NOTE

