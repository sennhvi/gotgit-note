0
继续暂存区实践
NOTE
	# 查看版本库所位于的分支
	$ git status --sb
	$ git log --graph --pretty=oneline --stat
	# 查看保存的进度用命令
	$ git stash list
	# 从最近保存的进度进行恢复
	$ git stash pop

1
使用git stash
NOTE
	# 保存当前的工作进度,会分别对暂存区和工作区的状态进行保存
	$ git stash
	# 显示进度列表,以选择回复
	$ git stash list
	# pop参数,默认恢复最新保存进度.可以提供<stash>参数,恢复完毕会从stash中删除
	# --index参数除了恢复工作区外,还回复暂存区
	$ git stash pop [--index] [<stash>]
	# 完整版命令,如果需要在保存工作进度的时候使用指定的说明,必须使用以下的格式:git stash save "msg"
	# 参数 --patch会显示工作区和HEAD的差异,通过对差异文件的编辑决定在进度中最终要保存的工作区的内容
	# -k |--keep-index 参数在保存进度后不会将暂存区重置.默认会将暂存区和工作区强制重置.
	$ git stash [save [--patch] [-k|--[no-] keep-index][-q|--quiet][<message>]]
	# 除了不删除恢复的进度之外,其余和git stash pop一样
	$ git stash apply [--index] [<stash>]
	# 删除一个存储的进度,默认最新的
	$ git stash drop [<stash>]
	# 删除所有存储的进度
	$ git stash clear
	# 基于进度创建分支
	$ git stash branch <branchname> <stash>
2
探秘　git stash
NOTE
	
